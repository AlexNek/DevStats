using System.Collections.ObjectModel;
using CommunityToolkit.Mvvm.ComponentModel;
using DevStats.Dashboard;

namespace DevStats.Plugins.CsStatistics;

public class CsStatisticsViewModel : ObservableObject, ICardViewModel
{
  private readonly AppSettings _appSettings;
  private int _accessErrorCount;
  private int _autoGeneratedCount;
  private double _averageSize;
  private int _filesCount;
  private ObservableCollection<FileStatItem> _fileStatsItems = new();
  private ObservableCollection<CsFileSizeHistogramItem> _histogramItems = new();
  private long _maxSize;
  private long _minSize;

  private int _totalFilesCount;
  private int _zeroSizeFilesCount;

  public int AccessErrorCount
  {
    get => _accessErrorCount;
    set => SetProperty(ref _accessErrorCount, value);
  }

  public int AutoGeneratedCount
  {
    get => _autoGeneratedCount;
    set => SetProperty(ref _autoGeneratedCount, value);
  }

  public double AverageSize
  {
    get => _averageSize;
    set => SetProperty(ref _averageSize, value);
  }

  public int FilesCount
  {
    get => _filesCount;
    set => SetProperty(ref _filesCount, value);
  }

  public ObservableCollection<FileStatItem> FileStatsItems
  {
    get => _fileStatsItems;
    set => SetProperty(ref _fileStatsItems, value);
  }

  /// <summary>
  ///   Values for chart bar lengths
  /// </summary>
  public double[] HistogramCounts =>
    HistogramItems?.Select(h => (double)h.Count).ToArray() ?? new double[0];

  public ObservableCollection<CsFileSizeHistogramItem> HistogramItems
  {
    get => _histogramItems;
    set
    {
      if (SetProperty(ref _histogramItems, value))
      {
        OnPropertyChanged(nameof(HistogramCounts));
        OnPropertyChanged(nameof(HistogramLabels));
      }
    }
  }

  /// <summary>
  ///   Labels for chart Y-axis
  /// </summary>
  public string[] HistogramLabels =>
    HistogramItems?.Select(h => h.Range).ToArray() ?? new string[0];

  public long MaxSize
  {
    get => _maxSize;
    set => SetProperty(ref _maxSize, value);
  }

  public long MinSize
  {
    get => _minSize;
    set => SetProperty(ref _minSize, value);
  }

  public string Title => "C# File Size Histogram";

  public int TotalFilesCount
  {
    get => _totalFilesCount;
    set => SetProperty(ref _totalFilesCount, value);
  }

  public int ZeroSizeFilesCount
  {
    get => _zeroSizeFilesCount;
    set => SetProperty(ref _zeroSizeFilesCount, value);
  }

  public CsStatisticsViewModel(AppSettings appSettings)
  {
    _appSettings = appSettings;
  }

  public void ClearData()
  {
    HistogramItems.Clear();
    FileStatsItems.Clear();
    FilesCount = 0;
    MinSize = 0;
    MaxSize = 0;
    AverageSize = 0;
  }
}